
-- ---------------------------------
-- DEMO OF HOW TIDAL CYCLES WORKS --
-- ---------------------------------
-- see excellent docs here: https://tidalcycles.org/docs/
-- install: http://tidalcycles.org/docs/getting-started/macos_install
-- recommend following the courses: http://tidalcycles.org/docs/patternlib/tutorials/course1
-- ---------------------------------
-- double dash is how you do comments
-- Tidal runs on top of Supercollider, which is what does all the sound processing
-- something called SuperDirt has the sounds and it comes with a bunch: /Users/[user]/Library/Application Support/SuperCollider/downloaded-quarks/Dirt-Samples
-- d1, d2, d3 etc. are channels
-- to run a line or block of code, hit COMMAND + ENTER (Mac)
-- ---------------------------------

-- a very simple example
d1 $ sound "drum"

-- it can also be written as a block, and have added amp for volume
d1
  $ sound "drum"
  # amp "4"

-- an example using notes ( ~ is a rest)
d1
  $ note "[c d e f g a b ~]"
  # sound "superpiano"

-- to silence a channel
d1 silence

-- to silence all
hush

-- this shows how a cycle is always running and has 4 beats
d1
  $ sound "drum hh hh hh"
  # amp "4"

-- to make something go longer than one cycle, one way is to use slow
-- this effectively changes the quarter notes to half notes
d1
  $ slow 2
  $ sound "drum hh hh hh"
  # amp "4"

d1 silence

-- you can group using [ ]
-- here the high hats become triplets
d1
  $ sound "[drum, hh hh hh]"
  # amp "4"

-- you can use stack to run multiple things at omce
d1
  $ stack [
  sound "drum" # amp "4",
  sound "hh hh hh hh" # amp "4"
  ]

-- example of a lot going on in a stack
d1
  $ stack [
  sound "bd bd*2",
  sound "hh*2 [sn cp] cp future*4",
  sound "arpy" +| n "0 .. 15"
  ]

d1 silence

hush

-- RYTHMS
-- Euclidian rythm
-- https://forum.toplap.org/t/euclid-sequencing-in-place-of-randomness/466

-- 3/8 ...fitting 3 notes into an 8 note pattern
d2 $ n "[d1(3,8)]/2" # s "arpy" # amp "1.0"

d2 $ n "[d1(3,8) f1(3,8) e1(3,8,2) a1(3,8,2)]/2" # s "arpy" # amp "1.0"

d2 silence

hush

-- all the sounds so far have come from within Supercollider
-- but you can run sounds in your DAW (Ableton, Logic, whatever) using Tidal
-- check this out Controlling Ableton with Code â€“ my live-coding setup and light tutorial
-- https://www.youtube.com/watch?v=uNRa5prrGEY

d3 $ n "[-24*4, -18*8, -23]" # s "live1"

-- ^ above:
-- notes can be numbers: 0 = middle C = c5
-- -24 is the kick, -18 is high hat and -23 is rim
-- live1 is one of 8 MIDI ports I defined in Supercollider

d3 $ n "0 2 4 7" # s "live2"

-- ^ above:
-- live4 is the Vital synth with the "lonely sine" preset and an autofilter

d3 silence

hush

-- finally
-- "Crazy arpeggios with Tidalcycles - live coding improvised jam"
-- from here https://www.youtube.com/watch?v=C2GH5JmJwhU
-- Homework: try to figure out what this stuff does

d4
  $ whenmod 16 4 (|+| 3)
  $ jux (rev.(# s "jv").chunk 4 (iter 4))
  $ off 0.125 (|+| 12)
  $ off 0.25 (|+| 7)
  $ n "[d1(3,8) f1(3,8) e1(3,8,2) a1(3,8,2)]/2" # s "rash"
  # room 0.5 # size 0.6 # lpf (range 200 8000 $ slow 2 $ sine)
  # resonance (range 0.03 0.6 $ slow 2.3 $ sine)
  # pan (range 0.1 0.9 $ rand)

d4 silence

d5
  $ "[gabba*4, hh*8, [~ cp]*2]" # gain 1.2

d5 silence

hush
